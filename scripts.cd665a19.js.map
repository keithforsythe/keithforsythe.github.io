{"version":3,"sources":["js/scripts.js"],"names":["init","appStateToggle","document","querySelector","mobileAppStateToggle","appState","modalWindow","querySelectorAll","modalWindowLauncher","modalWindowClose","appReset","setAttribute","i","length","classList","remove","addEventListener","currentAppState","getAttribute","clickedData","dataset","sample","modalViewed","toggle","images","src","modalCloseButton","event","currentTarget","parentElement","lazyImages","slice","call","window","lazyImageObserver","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","lazyImage","target","srcset","unobserve","observe"],"mappings":"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","file":"scripts.cd665a19.js","sourceRoot":"..","sourcesContent":["function init() {\n    const appStateToggle = document.querySelector('.js-appstate-toggle');\n    const mobileAppStateToggle = document.querySelector('.js-mobileapp-toggle');\n    const appState = document.querySelector(\"#app\");\n    const modalWindow = document.querySelectorAll('.js-modal-window');\n    const modalWindowLauncher = document.querySelectorAll('.js-modal-toggle');\n    const modalWindowClose = document.querySelectorAll('.js-modal-close');\n    //Helper Functions\n    function appReset(){\n        appState.setAttribute('data-app-state', 'sleeping');\n        appState.setAttribute('data-modal-state', \"inactive\");\n        for(i=0; i < modalWindow.length; i++){\n            modalWindow[i].classList.remove('is-active');\n        }\n    }\n    //App State Toggle Button on Tablet and Deasktop\n    appStateToggle.addEventListener('click', function(){\n        var currentAppState = appState.getAttribute('data-app-state');\n        if(currentAppState == \"sleeping\") {\n            appState.setAttribute('data-app-state', 'active');\n        } else {\n            appReset();\n        }\n    });\n    //App State Close Button on Mobile Phones\n    mobileAppStateToggle.addEventListener('click', function(){\n        appReset();\n    });\n    //Sample Modal Window Launcher\n    for (var i = 0; i < modalWindowLauncher.length; i++) {\n        modalWindowLauncher[i].addEventListener('click', function() {\n            var clickedData = this.dataset.sample;\n            var modalViewed = document.querySelector(`[data-window=\"${ clickedData }\"]`);\n            modalViewed.classList.toggle('is-active');\n            var images = document.querySelectorAll(\".modal.is-active img\");\n            \n            //Load img source only when user clicks sample modal toggle\n            for(var i = 0; i < images.length; i++) {\n                images[i].src = images[i].getAttribute('data-src');\n            }\n                appState.setAttribute('data-modal-state', 'active');\n            }); \n    }\n    //Sample Modal Window Close Button\n    for (var i = 0; i < modalWindowClose.length; i++) {\n        modalWindowClose[i].addEventListener('click', function(){\n            const modalCloseButton = event.currentTarget;\n            modalCloseButton.parentElement.classList.remove('is-active');\n            appState.setAttribute('data-modal-state', 'inactive');\n\n            var images = document.querySelectorAll(\".modal img\");\n            for(var i = 0; i < images.length; i++) {\n                images[i].src = \"\";\n            }\n        });\n    }\n}\ninit();\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var lazyImages = [].slice.call(document.querySelectorAll(\"img.lazy\"));\n  \n    if (\"IntersectionObserver\" in window) {\n      let lazyImageObserver = new IntersectionObserver(function(entries, observer) {\n        entries.forEach(function(entry) {\n          if (entry.isIntersecting) {\n            let lazyImage = entry.target;\n            lazyImage.src = lazyImage.dataset.src;\n            lazyImage.srcset = lazyImage.dataset.srcset;\n            lazyImage.classList.remove(\"lazy\");\n            lazyImageObserver.unobserve(lazyImage);\n          }\n        });\n      });\n  \n      lazyImages.forEach(function(lazyImage) {\n        lazyImageObserver.observe(lazyImage);\n      });\n    } else {\n      // Possibly fall back to a more compatible method here\n    }\n  });"]}