{"version":3,"sources":["js/scripts.js"],"names":["init","appStateToggle","document","querySelector","mobileAppStateToggle","appState","modalWindow","querySelectorAll","modalWindowLauncher","modalWindowClose","appReset","i","setAttribute","length","classList","remove","addEventListener","lazyImages","slice","call","active","lazyLoad","setTimeout","forEach","lazyImage","getBoundingClientRect","top","window","innerHeight","bottom","getComputedStyle","display","src","dataset","srcset","filter","image","removeEventListener","getAttribute","event","clickedData","sample","toggle","currentTarget","parentElement"],"mappings":";AAAA,SAASA,IACCC,IAAAA,EAAiBC,SAASC,cAAc,uBACxCC,EAAuBF,SAASC,cAAc,wBAC9CE,EAAWH,SAASC,cAAc,QAClCG,EAAcJ,SAASK,iBAAiB,oBACxCC,EAAsBN,SAASK,iBAAiB,oBAChDE,EAAmBP,SAASK,iBAAiB,mBAuC1CG,SAAAA,IAGDC,IAFJN,EAASO,aAAa,iBAAkB,YACxCP,EAASO,aAAa,mBAAoB,YACtCD,EAAE,EAAGA,EAAIL,EAAYO,OAAQF,IAC7BL,EAAYK,GAAGG,UAAUC,OAAO,aAzCxCb,SAASc,iBAAiB,mBAAoB,WACtCC,IAAAA,EAAa,GAAGC,MAAMC,KAAKjB,SAASK,iBAAiB,aACrDa,GAAS,EAEPC,EAAW,SAAXA,KACW,IAAXD,IACFA,GAAS,EAETE,WAAW,WACTL,EAAWM,QAAQ,SAASC,GACrBA,EAAUC,wBAAwBC,KAAOC,OAAOC,aAAeJ,EAAUC,wBAAwBI,QAAU,GAA8C,SAAxCC,iBAAiBN,GAAWO,UAChJP,EAAUQ,IAAMR,EAAUS,QAAQD,IAClCR,EAAUU,OAASV,EAAUS,QAAQC,OACrCV,EAAUV,UAAUC,OAAO,QAMD,KAJ1BE,EAAaA,EAAWkB,OAAO,SAASC,GAC/BA,OAAAA,IAAUZ,KAGJX,SACbX,SAASmC,oBAAoB,SAAUhB,GACvCM,OAAOU,oBAAoB,SAAUhB,GACrCM,OAAOU,oBAAoB,oBAAqBhB,OAKtDD,GAAS,GACR,OAIPlB,SAASc,iBAAiB,SAAUK,GACpCM,OAAOX,iBAAiB,SAAUK,GAClCM,OAAOX,iBAAiB,oBAAqBK,KAWjDpB,EAAee,iBAAiB,QAAS,WAEf,YADAX,EAASiC,aAAa,kBAExCjC,EAASO,aAAa,iBAAkB,UAExCF,MAIRN,EAAqBY,iBAAiB,QAAS,WAC3CN,MAGC,IAAA,IAAIC,EAAI,EAAGA,EAAIH,EAAoBK,OAAQF,IAC5CH,EAAoBG,GAAGK,iBAAiB,QAAS,SAASuB,GAClDC,IAAAA,EAAc,KAAKP,QAAQQ,OACbvC,SAASC,cAAgCqC,iBAAAA,OAAAA,EAA3D,OACY1B,UAAU4B,OAAO,aAC7BrC,EAASO,aAAa,mBAAoB,YAI7C,IAAID,EAAI,EAAGA,EAAIF,EAAiBI,OAAQF,IACzCF,EAAiBE,GAAGK,iBAAiB,QAAS,SAASuB,GAC1BA,EAAMI,cACdC,cAAc9B,UAAUC,OAAO,aAChDV,EAASO,aAAa,mBAAoB,cAItDZ","file":"scripts.08147fed.map","sourceRoot":"..","sourcesContent":["function init() {\n    const appStateToggle = document.querySelector('.js-appstate-toggle');\n    const mobileAppStateToggle = document.querySelector('.js-mobileapp-toggle');\n    const appState = document.querySelector(\"#app\");\n    const modalWindow = document.querySelectorAll('.js-modal-window');\n    const modalWindowLauncher = document.querySelectorAll('.js-modal-toggle');\n    const modalWindowClose = document.querySelectorAll('.js-modal-close');\n    //lazyload\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        let lazyImages = [].slice.call(document.querySelectorAll(\"img.lazy\"));\n        let active = false;\n      \n        const lazyLoad = function() {\n          if (active === false) {\n            active = true;\n      \n            setTimeout(function() {\n              lazyImages.forEach(function(lazyImage) {\n                if ((lazyImage.getBoundingClientRect().top <= window.innerHeight && lazyImage.getBoundingClientRect().bottom >= 0) && getComputedStyle(lazyImage).display !== \"none\") {\n                  lazyImage.src = lazyImage.dataset.src;\n                  lazyImage.srcset = lazyImage.dataset.srcset;\n                  lazyImage.classList.remove(\"lazy\");\n      \n                  lazyImages = lazyImages.filter(function(image) {\n                    return image !== lazyImage;\n                  });\n      \n                  if (lazyImages.length === 0) {\n                    document.removeEventListener(\"scroll\", lazyLoad);\n                    window.removeEventListener(\"resize\", lazyLoad);\n                    window.removeEventListener(\"orientationchange\", lazyLoad);\n                  }\n                }\n              });\n      \n              active = false;\n            }, 200);\n          }\n        };\n      \n        document.addEventListener(\"scroll\", lazyLoad);\n        window.addEventListener(\"resize\", lazyLoad);\n        window.addEventListener(\"orientationchange\", lazyLoad);\n      });\n    //Helper Functions\n    function appReset(){\n        appState.setAttribute('data-app-state', 'sleeping');\n        appState.setAttribute('data-modal-state', \"inactive\");\n        for(i=0; i < modalWindow.length; i++){\n            modalWindow[i].classList.remove('is-active');\n        }\n    }\n    //App State Toggle Button on Tablet and Deasktop\n    appStateToggle.addEventListener('click', function(){\n        var currentAppState = appState.getAttribute('data-app-state');\n        if(currentAppState == \"sleeping\") {\n            appState.setAttribute('data-app-state', 'active');\n        } else {\n            appReset();\n        }\n    });\n    //App State Close Button on Mobile Phones\n    mobileAppStateToggle.addEventListener('click', function(){\n        appReset();\n    });\n    //Sample Modal Window Launcher\n    for (var i = 0; i < modalWindowLauncher.length; i++) {\n        modalWindowLauncher[i].addEventListener('click', function(event) {\n            var clickedData = this.dataset.sample;\n            var modalViewed = document.querySelector(`[data-window=\"${ clickedData }\"]`);\n            modalViewed.classList.toggle('is-active');\n            appState.setAttribute('data-modal-state', 'active');\n        });\n    }\n    //Sample Modal Window Close Button\n    for (var i = 0; i < modalWindowClose.length; i++) {\n        modalWindowClose[i].addEventListener('click', function(event){\n            const modalCloseButton = event.currentTarget;\n            modalCloseButton.parentElement.classList.remove('is-active');\n            appState.setAttribute('data-modal-state', 'inactive');\n        });\n    }\n}\ninit();\n"]}